<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="SYSTEM-72" ignored="0" name="Default test" tests="15" failures="0" timestamp="27 Dec 2019 05:04:19 GMT" time="0.165" errors="0">
  <testcase name="@BeforeClass openBrowser" time="0.0" classname="lms.genericLibraries.BaseClass">
    <failure type="org.testng.TestNGException" message="
Parameter &amp;apos;browser&amp;apos; is required by BeforeClass on method openBrowser but has not been marked @Optional or defined
in C:\Users\Prod\AppData\Local\Temp\testng-eclipse--1090753645\testng-customsuite.xml">
      <![CDATA[org.testng.TestNGException: 
Parameter 'browser' is required by BeforeClass on method openBrowser but has not been marked @Optional or defined
in C:\Users\Prod\AppData\Local\Temp\testng-eclipse--1090753645\testng-customsuite.xml
at org.testng.internal.Parameters.createParams(Parameters.java:290)
at org.testng.internal.Parameters.createParametersForMethod(Parameters.java:359)
at org.testng.internal.Parameters.createParameters(Parameters.java:620)
at org.testng.internal.Parameters.createConfigurationParameters(Parameters.java:190)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:209)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:168)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:105)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- @BeforeClass openBrowser -->
  <testcase name="@BeforeMethod login" time="0.0" classname="lms.genericLibraries.BaseClass">
    <skipped/>
  </testcase> <!-- @BeforeMethod login -->
  <testcase name="@AfterMethod tearDown" time="0.0" classname="lms.genericLibraries.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase name="@BeforeMethod login" time="0.0" classname="lms.genericLibraries.BaseClass">
    <skipped/>
  </testcase> <!-- @BeforeMethod login -->
  <testcase name="@AfterMethod tearDown" time="0.0" classname="lms.genericLibraries.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase name="@BeforeMethod login" time="0.0" classname="lms.genericLibraries.BaseClass">
    <skipped/>
  </testcase> <!-- @BeforeMethod login -->
  <testcase name="@AfterMethod tearDown" time="0.0" classname="lms.genericLibraries.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase name="@BeforeMethod login" time="0.0" classname="lms.genericLibraries.BaseClass">
    <skipped/>
  </testcase> <!-- @BeforeMethod login -->
  <testcase name="@AfterMethod tearDown" time="0.0" classname="lms.genericLibraries.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase name="@BeforeMethod login" time="0.0" classname="lms.genericLibraries.BaseClass">
    <skipped/>
  </testcase> <!-- @BeforeMethod login -->
  <testcase name="@AfterMethod tearDown" time="0.0" classname="lms.genericLibraries.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase name="@BeforeMethod login" time="0.0" classname="lms.genericLibraries.BaseClass">
    <skipped/>
  </testcase> <!-- @BeforeMethod login -->
  <testcase name="@AfterMethod tearDown" time="0.0" classname="lms.genericLibraries.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase name="@BeforeMethod login" time="0.0" classname="lms.genericLibraries.BaseClass">
    <skipped/>
  </testcase> <!-- @BeforeMethod login -->
  <testcase name="@AfterMethod tearDown" time="0.0" classname="lms.genericLibraries.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase name="@BeforeMethod login" time="0.0" classname="lms.genericLibraries.BaseClass">
    <skipped/>
  </testcase> <!-- @BeforeMethod login -->
  <testcase name="@AfterMethod tearDown" time="0.0" classname="lms.genericLibraries.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase name="@BeforeMethod login" time="0.0" classname="lms.genericLibraries.BaseClass">
    <skipped/>
  </testcase> <!-- @BeforeMethod login -->
  <testcase name="@AfterMethod tearDown" time="0.0" classname="lms.genericLibraries.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase name="@BeforeMethod login" time="0.0" classname="lms.genericLibraries.BaseClass">
    <skipped/>
  </testcase> <!-- @BeforeMethod login -->
  <testcase name="@AfterMethod tearDown" time="0.0" classname="lms.genericLibraries.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase name="@BeforeMethod login" time="0.0" classname="lms.genericLibraries.BaseClass">
    <skipped/>
  </testcase> <!-- @BeforeMethod login -->
  <testcase name="@AfterMethod tearDown" time="0.0" classname="lms.genericLibraries.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase name="@BeforeMethod login" time="0.0" classname="lms.genericLibraries.BaseClass">
    <skipped/>
  </testcase> <!-- @BeforeMethod login -->
  <testcase name="@AfterMethod tearDown" time="0.0" classname="lms.genericLibraries.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase name="@BeforeMethod login" time="0.0" classname="lms.genericLibraries.BaseClass">
    <skipped/>
  </testcase> <!-- @BeforeMethod login -->
  <testcase name="@AfterMethod tearDown" time="0.0" classname="lms.genericLibraries.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase name="@BeforeMethod login" time="0.0" classname="lms.genericLibraries.BaseClass">
    <skipped/>
  </testcase> <!-- @BeforeMethod login -->
  <testcase name="@AfterMethod tearDown" time="0.0" classname="lms.genericLibraries.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase name="@BeforeMethod login" time="0.0" classname="lms.genericLibraries.BaseClass">
    <skipped/>
  </testcase> <!-- @BeforeMethod login -->
  <testcase name="@AfterMethod tearDown" time="0.0" classname="lms.genericLibraries.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase name="@AfterClass closeBrowser" time="0.0" classname="lms.genericLibraries.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterClass closeBrowser -->
  <testcase name="submitLniFormAndVerify" time="0.0" classname="com.lnitest.LniTest">
    <skipped/>
  </testcase> <!-- submitLniFormAndVerify -->
  <testcase name="approveLNIRequest" time="0.0" classname="com.lnitest.LniTest">
    <skipped/>
  </testcase> <!-- approveLNIRequest -->
  <testcase name="checkCurrentExpertiseBlankError" time="0.0" classname="com.lnitest.LniTest">
    <skipped/>
  </testcase> <!-- checkCurrentExpertiseBlankError -->
  <testcase name="modifyLniDetailsAndVerify" time="0.0" classname="com.lnitest.LniTest">
    <skipped/>
  </testcase> <!-- modifyLniDetailsAndVerify -->
  <testcase name="validateClassificationBlankError" time="0.0" classname="com.lnitest.LniTest">
    <skipped/>
  </testcase> <!-- validateClassificationBlankError -->
  <testcase name="validatePriorityBlankError" time="0.0" classname="com.lnitest.LniTest">
    <skipped/>
  </testcase> <!-- validatePriorityBlankError -->
  <testcase name="verifyDurationEditboxBlankError" time="0.0" classname="com.lnitest.LniTest">
    <skipped/>
  </testcase> <!-- verifyDurationEditboxBlankError -->
  <testcase name="verifyLearningNeedDescriptionBlankError" time="0.0" classname="com.lnitest.LniTest">
    <skipped/>
  </testcase> <!-- verifyLearningNeedDescriptionBlankError -->
  <testcase name="verifyLearningTypeBlankError" time="0.0" classname="com.lnitest.LniTest">
    <skipped/>
  </testcase> <!-- verifyLearningTypeBlankError -->
  <testcase name="verifyLniTitleBlankError" time="0.0" classname="com.lnitest.LniTest">
    <skipped/>
  </testcase> <!-- verifyLniTitleBlankError -->
  <testcase name="verifyPeopleEditboxBlankError" time="0.0" classname="com.lnitest.LniTest">
    <skipped/>
  </testcase> <!-- verifyPeopleEditboxBlankError -->
  <testcase name="verifyProjectCodeBlankError" time="0.0" classname="com.lnitest.LniTest">
    <skipped/>
  </testcase> <!-- verifyProjectCodeBlankError -->
  <testcase name="verifyProjectNameBlankError" time="0.0" classname="com.lnitest.LniTest">
    <skipped/>
  </testcase> <!-- verifyProjectNameBlankError -->
  <testcase name="verifySponsorerBlankErr" time="0.0" classname="com.lnitest.LniTest">
    <skipped/>
  </testcase> <!-- verifySponsorerBlankErr -->
  <testcase name="view_Lni_SummaryAndVerify" time="0.0" classname="com.lnitest.LniTest">
    <skipped/>
  </testcase> <!-- view_Lni_SummaryAndVerify -->
</testsuite> <!-- Default test -->
